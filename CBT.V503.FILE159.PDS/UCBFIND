*          DATA SET CBT1500    AT LEVEL 001 AS OF 01/09/86
UCBFIND  CSECT                                                          00001
UCBFIND  AMODE 31                                                       00002
UCBFIND  RMODE ANY                                                      00003
*********************************************************************   00004
*********************************************************************   00005
**-- MAINTENANCE:                                                  **   00006
**07/30/84 - COMMENT OUT LOAD OF XDC TO REDUCE ACTIVITY TO LNKLST  **   00007
**                                                                 **   00008
**01/09/86 - FREE SUBPOOL 230 KEY 1 STORAGE FROM IEFAB4UV (VS.     **   00009
**           LETTING TASK TERMINATION FREE IT).  UPDATED COMMENTS  **   00010
**           ON "NOT ENOUGH STORAGE FOR ALL UCB'S" PROCESSING, AND **   00011
**           REQUIREMENTS OF THIS MODULE BEING LINKED AS RE-ENTERANT*   00012
**           (THE FREEMAIN IN KEY1 WILL NOT WORK UNLESS IT IS RENT)**   00013
*********************************************************************   00014
*********************************************************************   00015
**                                                                 **   00016
**        UCBFIND IS A SUBROUTINE FOR USE IN SP3 OR X-A SYSTEM FOR **   00017
**  UCB LOOK UP FUNCTIONS. THE CHARTS BELOW DESCRIBES THE FUNCTIONS**   00018
**-----------------------------------------------------------------**   00019
**-----------------------------------------------------------------**   00020
**-  COMMENT OUT THE #DIE MACRO (USED FOR CSR'S DBC TESTING OF ----**   00021
**-- AUTHORIZED CODE) OR PRIOR TO PRODUCTION INSTALL, ZAP THE CODE:**   00022
**-- 0328 00DEAD                        NO-OPS 070007  ------------**   00023
**-- 032B 02     >>>>>>>TO>>>>>>>>>>>>>   "    00      ------------**   00024
**---032C F140                            "    0700    ------------**   00025
**-----------------------------------------------------------------**   00026
**FUNC|       INPUT DATA                 |  RETURNED OUTPUT DATA   **   00027
**CODE|                                  |                         **   00028
**----|----------------------------------|-------------------------**   00029
** 00 |GENERIC OR ESOTERIC NAME          |  ALL MATCHING UCBS      **   00030
** 01 |DEV CLASS+TYPE FOR GENERIC DEVICE |  ALL MATCHING UCBS      **   00031
** 01 |DEV CLASS+TYPE FOR ESOTERIC DEVICE|ALL MATCHING UCBS X-A ONLY*   00032
** 02 |1 COMPLETE VOL-SER                |  CURRENTLY NOT SUPPORTED**   00033
** 03 |FIRST 3 CHARS OF VOL-SER          |  CURRENTLY NOT SUPPORTED**   00034
**-----------------------------------------------------------------**   00035
** 00   DEVICE SEARCH VIA GENERIC NAME:******************************   00036
**          THE EDT IS SEARCHED FOR GENERIC NAME.  IF MATCH FOUND, **   00037
**  THE COMPLETE MASK (DEVICE CLASS AND DEVICE TYPE) IS RETRIEVED  **   00038
**  FROM THE EDT.  THE NAME IS GENERIC IF THE DEVICE TYPE NOT 00.  **   00039
**  ALL UCBS OF 'THAT DEVICE CLASS' ARE REQUESTED FROM THE SCAN    **   00040
**  SERVICE ROUTINE.  EACH RETRIEVED UCB IS COMPARED WITH THE HELD **   00041
**  DEVICE TYPE. UCB ADDRESSES OF ALL MATCHES ARE STORED IN THE    **   00042
**  CALLERS STORAGE AREA WITH A COUNT OF THE NUMBER FOUND.         **   00043
**                                                                 **   00044
** 00   DEVICE SEARCH VIA ESOTERIC NAME:*****************************   00045
**          THE EDT IS SEARCHED FOR ESOTERIC NAME. IF MATCH FOUND, **   00046
**  THE COMPLETE MASK (DEVICE CLASS AND DEVICE TYPE) IS RETRIEVED  **   00047
**  FROM THE EDT.  THE NAME IS ESOTERIC IF THE DEVICE TYPE = 00.   **   00048
**  THE SCAN SERVICE ROUTINE CAN NOT BE USED, IEFAB4UV IS UTILIZED **   00049
**  (PROTECT KEY 1)                                                **   00050
**                                                                 **   00051
** 01   DEVICE SEARCH VIA DEVICE CLASS + TYPE FOR GENERIC NAME:******   00052
**  THE DEVICE IS GENERIC IF THE DEVICE TYPE NOT 00.  ALL UCBS OF  **   00053
**  'THAT DEVICE CLASS' ARE REQUESTED FROM THE SCAN SERVICE ROUTINE**   00054
**  EACH RETRIEVED UCB IS COMPARED WITH THE HELD DEVICE TYPE. ALL  **   00055
**  MATCHES ARE STORED IN THE CALLER'S STORAGE AREA WITH A COUNT.  **   00056
**                                                                      00057
** 01   DEVICE SEARCH VIA DEVICE CLASS + TYPE FOR ESOTERIC NAME:*****   00058
**  SUPPORTED ONLY UNDER X-A:                                           00059
**  THE DEVICE IS ESOTERIC IF THE DEVICE TYPE = 00.  IEFAB4UV IS   **   00060
**  INVOKED WITH THE UCBTYP AS INPUT REQUESTING A UNIT NAME AS     **   00061
**  OUTPUT (THIS FUNCTION ONLY WORKS UNDER X-A).  IEFAB4UV IS THEN **   00062
**  REINVOKED WITH THE UNIT NAME AS INPUT. OUTPUT CONSISTS OF THE  **   00063
**  UCBS AND A COUNT OF THEM                                       **   00064
**                                                                 **   00065
**  **** THE FOLLOWING IS ONLY FOR SCAN SERVICE ROUTINE *****      **   00066
**  IF ALL THE UCB ADDRESSES DO NOT FIT INTO THE OUTPUT AREA, THE  **   00067
**  CALLER MUST RE-INVOKE THE SUBROUTINE WITH THE SAME REQUEST,    **   00068
**  ''WITHOUT'' CLEARING OUT THE 100 BYTE WORK AREA (INFO IN THAT  **   00069
**  AREA TELLS THE SUBROUTINE WHERE TO CONTINUE PROCESSING UCBS.   **   00070
**  **THIS CODE IS NOT COMPLETED, AND ONLY A FUTURE SUGGESTION**   **   00071
*********************************************************************   00072
*********************************************************************   00073
**                                                                 **   00074
**    CMD BUFFER (INPUT) POINTED TO BY CPPL:                       **   00075
**                                                                 **   00076
**  ____________________________________________                   **   00077
**  |   XX    |XXXXXX|CCCCCCCC|    XXXXXXXX    |                   **   00078
**  |________________|________|________________|                   **   00079
**  |FUNCTION |(NOT  | NAME/  |  ADDRESS OF A  |                   **   00080
**  |  CODE   | USED)| DEVICE | 2K OUTPUT AREA |                   **   00081
**  |         |      |  TYPE  |                |                   **   00082
**  |_________|______|________|________________|                   **   00083
**                                                                 **   00084
** F  -XX FUNCTION BITS -                                          **   00085
**  00: GENERIC/ESOTERIC NAME BEING PASSED FOR UCBS                **   00086
**  01: UNITTYP (3010200E) IS BEING PASSED FOR MATCHING UCBS       **   00087
**              (00012000) ESOTERIC DEVICES **WORKS ONLY FOR X-A   **   00088
**  THE FOLLOWING FUNCTIONS ARE NOT SUPPORTED:                     **   00089
**  02: 1 COMPLETE VOL-SER IS BEING PASSED FOR MATCHING UCB        **   00090
**  03: FIRST 3 CHARS OF VOL-SER BEING PASSED FOR MATCHING UCBS    **   00091
**    -XXXXXX NOT UTILIZED CURRENTLY                               **   00092
** CL8-GENERIC/ESOTERIC/VOL-SER NAME                               **   00093
**    OR:                                                          **   00094
**    -XX DEVICE CLASS                                             **   00095
**    -XXXXXX NOT UTILIZED FOR FUNCTION=01                         **   00096
** F  -AN ADDRESS OF A 2K STORAGE AREA WHICH THE CALLER IS         **   00097
**     RESPONSIBLE TO GET/FREEMAIN. IT WILL CONTAIN ALL THE OUTPUT **   00098
**     FROM THE SUBROUTINE. THE BREAKDOWN OF ITS CONTENTS IS:      **   00099
**     -100 BYTE WORK AREA WHICH MUST BE INITIALIZED TO BINARY     **   00100
**         ZEROS 'ONLY' ON THE FIRST CALL TO THIS SUBROUTINE FOR A **   00101
**         SPECIFIC FUNCTION. FOR SUBSEQUENT ACCESSES 'OF SAME'    **   00102
**         FUNCTION, DO 'NOT' TOUCH THE CONTENTS OF THIS WORK AREA **   00103
**     -4 BYTES (1 FULLWORD) FOR RETURNED COUNT OF # OF UCBS BEING **   00104
**          RETURNED. THIS SHOULD BE INITIALIZED TO ZEROS          **   00105
**     -2800 BYTES (700 FULLWORDS) FOR RETURNED UCB ADDRESSES. THIS**   00106
**         SHOULD BE INITIALIZED TO ZEROS                          **   00107
*********************************************************************   00108
**  THIS MODULE "MUST" BE LINKED RE-ENTERANT OR THE FREEMAIN WITHIN**   00109
**  KEY=1 MODE WILL NOT EXECUTE (OC4 DUE TO FETCH LOADING A NONRENT**   00110
**  MODULE INTO A DIFFERENT SUBPOOL THAN A RENT MODULE).  IF XDC   **   00111
**  IS USED TO TEST, THE MODULE "MUST" BE MARKED NON-RENT. YOU WILL**   00112
**  THEREFORE HAVE TO SKIP OVER THE KEY=1 FREEMAIN IN EODAD ROUTINE.*   00113
*********************************************************************   00114
**  RETURN CODE SETTINGS:                                          **   00115
**  R15 = 00 - ALL UCBS RETURNED                                   **   00116
**  R15 = 04 - NOT ALL UCBS RETURNED, MUST RETURN FOR THE REST     **   00117
**  R15 = 08 - NO UCBS FOUND                                       **   00118
**  R15 = 16 - FUNCTION NOT SUPPORTED                              **   00119
**  R15 = 20 - STORAGE NOT AVAIL TO IEFAB4UV FOR UCB LIST          **   00120
**  R15 = 24 - DEVICE TYPE NOT DEFINED TO SYSTEM                   **   00121
**  R15 = 28 - NOT ALL UCBS RETURNED, RECODE FOR MORE THAT 700 UCBS**   00122
**  R15 = 99 - PROBLEM - ABEND PROGRAM                             **   00123
*********************************************************************   00124
*********************************************************************   00125
R0       EQU   0                                                        00126
R1       EQU   1    WORK REG (PTR TO CPPL, UCB ADDR, ETC.)              00127
R2       EQU   2    DSECT FOR INPUT PARM + 2K OUTPUT WORK AREA          00128
R3       EQU   3    PTR TO UCB SLOT IN PARM AREA                        00129
R4       EQU   4    PTR TO CVT                                          00130
R5       EQU   5    PTR TO JESCT, PTR TO EDT                            00131
R6       EQU   6    # OF UNIT NAMES IN EDT                              00132
R7       EQU   7    LENGTH OF EDT ENTRY                                 00133
R8       EQU   8    PTR TO EDT ENTRY (GENERIC NAME)                     00134
R9       EQU   9                                                        00135
R10      EQU   10   1ST BASE REG                                        00136
R11      EQU   11   2ND BASE REG                                        00137
R12      EQU   12   HOLD RETURN CODE                                    00138
R13      EQU   13   GETMAIN AREA FOR RE-ENT CODING                      00139
R14      EQU   14   BRANCH REG                                          00140
R15      EQU   15                                                       00141
*                                                                       00142
PROLOG   EQU   *                                                        00143
         USING *,R15                                                    00144
         BC    15,PSTART                                                00145
         DC    CL8'UCBFIND'       MODULE NAME                           00146
         DC    CL8'&SYSDATE'      DATE MODULE COMPILED                  00147
         DC    CL8'&SYSTIME'      TIME MODULE COMPILED                  00148
PSTART   STM   R14,R12,12(R13)                                          00149
         LR    R10,R15            LOAD REGS                             00150
         DROP  R15                                                      00151
         USING UCBFIND,R10,R11    BASE REGS                             00152
         LA    R11,4095(R10)      INITIALIZE 2ND BASE REG               00153
         LA    R11,1(R11)         MAKE IT AN EVEN 4096                  00154
         LR    R2,R1              SAVE PTR TO PARM                      00155
         GETMAIN R,LV=LDYNAMIC    LEN OF DYNAMIC AREA                   00156
         LR    R3,R1                                                    00157
         ST    R13,4(R3)          SAVE HSA IN LSA                       00158
         ST    R3,8(R13)          SAVE LSA IN HSA                       00159
         L     R1,24(R13)         RESTORE REG ONE                       00160
         LR    R13,R3             SET UP NEW SAVE AREA                  00161
         USING DYNMAREA,R13                                             00162
         SR    R12,R12            INITIALIZE RC REG                     00163
         MVC   WTOMSG(92),WTOPATRN CLEAR WTO MSGAREA + SET CNTL BITS    00164
         L     R4,CVTPTR          GET CVT ADDR                          00165
         USING CVTMAP,R4          ADDR TO CVT                           00166
         L     R5,CVTJESCT        JES CONTROL TABLE                     00167
         L     R1,CVTUCBSC        LOAD ADDR OF UCB SCAN SERV RTN        00168
         ST    R1,SSADDR          SAVE IT FOR LATER                     00169
         L     R1,0(R4)           OLD-NEW TCB PTR                       00170
         L     R1,4(R1)           OLD TCB PTR                           00171
         ST    R1,TCBHOLD         HOLD ADDR OF CURRENT TCB              00172
         MVI   SYSTEMSW,X'00'     INITIALIZE SW FOR SYSTEM TYPE         00173
         TM    CVTDCB,CVTMVSE     IF =1 IT IS X-A                       00174
         BC    8,MVS              IT IS MVS                             00175
XA       MVI   SYSTEMSW,X'11'     TURN ON THE SW TO SAY IT IS XA        00176
MVS      EQU   *                                                        00177
         DROP  R4                                                       00178
******* GET PARM INFO:                                                  00179
FUNDUCBS LA    R4,0(R2)           GET PAST THE PARM LENGTH              00180
         USING PARMAREA,R4                                              00181
         L     R2,PARM2K          ADDRESS OF THE 2K WORK (OUTPUT) AREA  00182
         USING OUT2K,R2           ADDRESS TO 2K AREA                    00183
         MVC   HOLDNAME,=CL8' '   CLEAR OUT HOLD AREA                   00184
         MVC   HOLDMASK,=XL4'00'  CLEAR OUT HOLD AREA                   00185
TESTFUNC CLI   PARMFUNC,X'00'     X'00' = ESOTERIC/GENERIC NAME INPUT   00186
         BC    8,INNAME           FIND UCBS VIA ESOTERIC/GENERIC INPUT  00187
         CLI   PARMFUNC,X'01'     X'01' = DEVICE CLASS GIVEN AS INPUT   00188
         BC    8,INDEV            FIND UCBS = GIVEN DEVICE CLASS        00189
         CLI   PARMFUNC,X'02'     X'02' = VOL-SER GIVEN AS INPUT        00190
         BC    8,GIVE1VOL         FIND 1 UCB = GIVEN VOL-SER            00191
         CLI   PARMFUNC,X'03'     X'03' = FIRST 3 CHARS OF VOL-SER      00192
         BC    8,GIVEVOLS         FIND ALL UCB MATCHING FIRST 3 CHARS   00193
         MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00194
         BAL   R14,WTOIT          WRITE MSG                             00195
         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00196
         BC    15,ENDIT           EOJ                                   00197
*********************************************************************   00198
*********PROCESSING ROUTINE WHEN INPUT IS ESOTERIC/GENERIC NAME         00199
*********************************************************************   00200
INNAME   MVC   HOLDNAME,PARMNAME  MOVE IN ESOTERIC/GENERIC NAME         00201
         BAL   R14,EDTRTN         GO TO EDT RTN TO GET DEV CLASS + TYPE 00202
         LTR   R12,R12            RC=0 ?                                00203
         BNZ   NONAME0            NO, NAMES NOT FOUND SAY IT + EOJ      00204
         CLI   HOLDDEVT,X'00'     DEV TYPE=00 (ESOTERIC NAME)?          00205
         BC    6,INNAMESR         NO, GENERIC, BRANCH TO SCAN SERV RTN  00206
         MVC   HOLDMASK,=XL4'00'  CLEAR OUT DEV MASK, NOT LONGER NEEDED 00207
         MVC   HOLDFLAG,FLGNAME   IEFAB4UV FLAGS FOR UNIT NAME          00208
         BAL   R14,IEFAB4UV       IEFAB4UV: ESOTERIC NAME IN-UCBS OUT   00209
         LTR   R12,R12            WERE UCBS FOUND?                      00210
         BC    8,INNAMEUC         YES, GO BRANCH TO UCB MOVE RTN NOW    00211
         CH    R12,=H'4'          RETURN CODE=4?                        00212
         BC    8,NONAME           NAME NOT FOUND-RETURN WITH RC=8       00213
         CH    R12,=H'16'         RETURN CODE=16?                       00214
         BC    8,NOIEFSTO         NO STORG AVAIL FOR IEFAB4UV UCB LIST  00215
         LA    R12,153            R12=99 LOAD THE ABEND RETURN CODE     00216
         BC    15,ABENDIT         ABEND ALL OTHER RETURN CODES          00217
INNAMEUC BAL   R14,IEFUCBS        GO MOVE THE UCBS TO CALLERS STORAGE   00218
         BC    15,EODAD           EOJ                                   00219
INNAMESR BAL   R14,SCANSERV       TO SCAN SERV RTN + DO GENERIC SEARCH  00220
         BC    15,ENDIT           EOJ                                   00221
*********************************************************************   00222
*********END OF ROUTINE FOR ESOTERIC/GENERIC INPUT                      00223
*********************************************************************   00224
*                                                                       00225
*********************************************************************   00226
*********PROCESSING ROUTINE WHEN INPUT IS  DEV TYPE + CLASS:            00227
*********************************************************************   00228
INDEV    MVC   HOLDMASK,PARMDEV   MOVE IN 4 BYTE UCBTYP                 00229
         CLI   HOLDDEVT,X'00'     IS DEVICE TYPE=00 (ESOTERIC NAME)?    00230
         BC    6,INDEVSR          NO, BRANCH TO BRANCH SERV RTN         00231
**THE FOLLOWING IS ESOTERIC SEARCH **                                   00232
**THE FOLLOWING FUNCTION ONLY SUPPORTED UNDER X-A. CHECK ENVIRONMENT.   00233
         TM    SYSTEMSW,X'11'     IS THIS X-A                           00234
         BC    1,INDEVXA          YES, DO THE X-A PROCESSING            00235
         MVC   WTOMSG+4(80),MSG12 ONLY SUPPORTED UNDER X-A              00236
         BAL   R14,WTOIT          WRITE MSG                             00237
         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00238
         BC    15,ENDIT           EOJ                                   00239
INDEVXA  MVC   HOLDFLAG,FLGDEV    IEFAB4UV FLAGS FOR UCBTYP             00240
         BAL   R14,IEFAB4UV       UCBTYP IN - UNIT NAME OUT             00241
         LTR   R12,R12            WAS A UNIT NAME FOUND?                00242
         BC    8,INDEVIEF         YES, LINK AGAIN TO GET UCBS THIS TIME 00243
         CH    R12,=H'4'          NOT FOUND                             00244
         BC    8,NONAME           SEND MSG NAME NOT FOUND               00245
         CH    R12,=H'24'         ENVIRONMENT IS INCORRECT              00246
         BC    8,NOEDTPTR         SAY NO EDT PTR IN JESCT               00247
         CH    R12,=H'28'         IEFEB4UV DOES NOT SUPPORT FUNCTION    00248
         BC    8,NOTSUP           SAY NOT SUPPORTED FUNCTION            00249
         LA    R12,153            R12=99                                00250
         BC    15,ABENDIT         EOJ                                   00251
* MOVE UNIT-NAME INTO HOLDNAME FOR NEXT IEFAB4UV LINK:                  00252
INDEVIEF MVC   HOLDNAME,IEFOUTNM  MOVE NAME/LOOK-UP-VALUE FOR NEXT BAL  00253
         MVC   HOLDMASK,=XL4'00'  CLEAR DEV CLASS+TYPE/NO LONGER NEEDED 00254
         MVC   HOLDFLAG,FLGNAME   IEFAB4UV FLAGS FOR UNIT NAME          00255
         BAL   R14,IEFAB4UV       IEFAB4UV: UNIT NAME IN - UCBS OUT     00256
         LTR   R12,R12            WERE UCBS FOUND?                      00257
         BC    8,INDEVUC          YES, GO BRANCH TO UCB MOVE RTN NOW    00258
         CH    R12,=H'4'          RETURN CODE=4?                        00259
         BC    8,NONAME           NAME NOT FOUND-RETURN WITH RC=8       00260
         CH    R12,=H'16'         RETURN CODE=16?                       00261
         BC    8,NOIEFSTO         NO STORG AVAIL FOR IEFAB4UV UCB LIST  00262
         BC    15,ABENDIT      ???ABEND ALL OTHER RETURN CODES          00263
INDEVUC  BAL   R14,IEFUCBS        GO MOVE THE UCBS TO CALLERS STORAGE   00264
         BC    15,EODAD           EOJ                                   00265
INDEVSR  BAL   R14,SCANSERV       TO SCAN SERV RTN + DO GENERIC SEARCH  00266
         BC    15,ENDIT           EOJ                                   00267
*********************************************************************   00268
*********END OF ROUTINE FOR DEV TYPE + CLASS INPUT                      00269
*********************************************************************   00270
*                                                                       00271
*********************************************************************   00272
*****     EDT (ELIGIBLE DEVICE TABLE) SUBROUTINE     ****************   00273
**********INPUT = ESOTERIC/GENERIC NAME, OUTPUT = DEVICE CLASS+TYPE     00274
*********************************************************************   00275
EDTRTN   STM   R14,R9,SUBSAVE     SAVE R0-R9,R14-R15 FOR SUBROUTINE     00276
         LA    R12,0              ZERO OUT RETURN CODE REG              00277
         USING JESCT,R5                                                 00278
         L     R5,JESEDT          PTR TO EDT                            00279
         L     R5,EDTLUVSP(,R5)   LOOK-UP SECTION                       00280
         L     R6,LUVENTNO(,R5)   # OF UNIT NAMES                       00281
         L     R7,LUVENTLN(,R5)   LENGTH OF ENTRY                       00282
         LA    R8,LUVENTRY(,R5)   FIRST ENTRY                           00283
         DROP  R5                                                       00284
LOOP     CLC   HOLDNAME,LUVUNAME(R8) UNIT FOUND?                        00285
         BE    EDTFOUND                                                 00286
         LA    R8,0(R7,R8)        GET NEXT ENTRY                        00287
         BCT   R6,LOOP            CONTINUE                              00288
         LA    R12,8              SET RC                                00289
         BC    15,EDTEND          END THE SUBROUTINE                    00290
EDTFOUND MVC   HOLDMASK,LUVVALUE(R8) SAVE UCBTYP TBYT1,2,DEVCLASS,+TYPE 00291
EDTEND   STM   R14,R9,SUBSAVE     RESTORE REGS                          00292
         BCR   15,R14             RETURN TO CALLER                      00293
*********************************************************************** 00294
*****     END OF EDT SUBROUTINE     *********************************** 00295
*********************************************************************** 00296
*                                                                       00297
*********************************************************************   00298
*****     SCAN SERVICE ROUTINE SUBROUTINE     ***********************   00299
*****INPUT = GENERIC NAME, OUTPUT = UCBS. (IEFAB4UV CAN ALSO BE USED)   00300
*********************************************************************   00301
* NOW THAT YOU HAVE THE DEVICE MASK (DEVICE CLASS AND UNIT TYPE)        00302
* GO TO THE SCAN SERVICE ROUTINE TO SEARCH UCB'S FOR THAT CLASS.        00303
* WHEN RETRIEVED, COMPARE THE UNIT TYPE.  IF A MATCH, ADD THE UCB       00304
* ADDRESS TO THE PARM (UCB SLOTS), THEN CONTINUE SEARCHING              00305
*********************************************************************   00306
SCANSERV STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00307
         LA    R12,0              CLEAR OUT RETURN REG                  00308
         LA    R1,OUTWORK                                               00309
         ST    R1,SSPRMWA         STORE ADDR IN SSPRMLST                00310
         LA    R1,SSDEVC          ADDR OF DEVICE CLASS                  00311
         ST    R1,SSPRMDEV        STORE ADDR IN SSPRMLST                00312
         MVC   SSDEVC,HOLDCLAS    SEARCH FOR CORRECT CLASS OF UCBS ONLY 00313
         LA    R1,SSUCB           ADDR OF RETURNED UCB                  00314
         ST    R1,SSPRMUCB        STORE UCB IN SSPRMLST                 00315
         OI    SSPRMUCB,X'80'     END OF SSPRMLST                       00316
         LA    R3,OUTUCBS         LOAD ADDR OF FIRST UCB SLOT           00317
         SR    R5,R5              INITIALIZE CNTR FOR # OF UCBS FOUND   00318
SCANLOOP LA    R1,SSPRMLST                                              00319
         L     R15,SSADDR                                               00320
         BALR  R14,R15            GO TO SCAN SERVICE INTERFACE          00321
         LTR   R15,R15            WAS A UCB RETURNED?                   00322
         BNZ   SCANEOL            NO, END THE SCAN LOOP (R12=0)         00323
         L     R1,SSUCB           GET UCB ADDRESS THAT THE SCAN         00324
         USING UCBOB,R1           ADDRESSABILITY TO UCB                 00325
         CLC   UCBTBYT3(2),HOLDDEV   IS CLASS + DEVICE TYPE EQUAL?      00326
         BC    7,SCANLOOP         NO, LOOP WITH SCAN SERVICE AGAIN      00327
         MVC   0(4,R3),SSUCB      MOVE IT INTO PARM UCB SLOT            00328
         AH    R5,=H'1'           ADD 1 TO UCB COUNTER                  00329
         CH    R5,=H'700'         COMPARE TO THE TOTAL UCBS IT CAN HOLD 00330
         BC    4,INCSLOT          THERE IS ROOM LEFT                    00331
         MVC   WTOMSG+4(80),MSG02 NOT ENOUGH PARM STORAGE               00332
         BAL   R14,WTOIT          WRITE MSG                             00333
         LA    R12,40             SET RC=28 NOT ALL UCBS RETURNED       00334
         BC    15,SCANEOL         EOJ                                   00335
INCSLOT  LA    R3,4(0,R3)         MOVE TO NEXT SLOT                     00336
         BC    15,SCANLOOP        GO BACK TO SCAN SERVICE AGAIN         00337
SCANEOL  ST    R5,OUTCNT          MOVE THE UCB COUNT TO OUTPUT AREA     00338
         LTR   R5,R5              WERE THERE UCBS FOUND?                00339
         BC    2,SCANEND          YES, GO END IT                        00340
         MVC   WTOMSG+4(80),MSG05       NO UCBS FOUND                   00341
         BAL   R14,WTOIT          WRITE MSG                             00342
         LA    R12,8              RC = NO UCBS FOUND                    00343
         BC    15,ENDIT           GO END IT                             00344
SCANEND  LM    R14,R9,SUBSAVE     RESTORE REGS                          00345
         BCR   15,R14             RETURN TO CALLER                      00346
**********************************************************************  00347
*****     END OF SCAN SERVICE ROUTINE SUBROUTINE     *****************  00348
**********************************************************************  00349
*                                                                       00350
*********************************************************************** 00351
*****     IEFAB4UV SUBROUTINE     ************************************* 00352
**1) INPUT=ESOTERIC UNIT NAMES, OUTPUT = UCBS                           00353
**2) INPUT=DEVICE TYPE (UCBTYP), OUTPUT = UNIT NAME                     00354
**   R2 = PTR TO OUT2.8K                                                00355
**   MOVE TO KEY=1 STORAGE FLAGS + PROPER INFO + LINK TO IEFAB4UV       00356
*********************************************************************** 00357
*                                                                       00358
IEFAB4UV EQU  *                                                         00359
ESOTERIC STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00360
         LA    R12,0              CLEAR OUT RETURN REG                  00361
         L    R6,TCBHOLD          HOLD ADDR OF TCB                      00362
         USING TCB,R6                                                   00363
******* MUST BE SUPERVISOR MODE TO GETMAIN KEY1 SP:                     00364
         SR   R1,R1                                                     00365
         SVC  254                                                       00366
         L    R14,SPNO236              SUBPOOL 236 (KEY 1)              00367
         MODESET MODE=SUP                                               00368
         GETMAIN R,LV=LKEY1SP,SP=(R14) FOR KEY SUBPOOL STORAGE          00369
******* MUST BE KEY0 (OR KEY1) TO MOVE INTO SP236 (WRITE PROTECTED):    00370
         MODESET EXTKEY=ZERO                                            00371
         ST   R1,KEY1ADDR         SAVE KEY1 GETMAIN'D AREA PTR          00372
         LR   R7,R1              PTR TO KEY1 STORAGE                    00373
*****************************************************************DBC    00374
** TO USE CSR'S DEBUGGING CONTROLLER (DBC) USE THE FOLLOWING:  **DBC    00375
*****************************************************************DBC    00376
***DO ESTAE AFTER MODESET=SUP TO GET ESTAE IN CORRECT MODE:      DBC    00377
*        LOAD  EP=XDC                                            DBC    00378
*        LR    R14,R0                                            DBC    00379
*        MVC   ESTAREA(DBCMFLN),DBCMFL                           DBC    00380
*        ESTAE (R14),MF=(E,ESTAREA)                              DBC    00381
*****THE FOLLOWING MACRO CAUSES AN ABEND + YOU ARE PUT INTO DBC  DBC    00382
*****CONVERT TO NO-OPS PRIOR TO RELEASING INTO PRODUCTION        DBC    00383
*        #DIE                                                           00384
*****************************************************************DBC    00385
******* SET UP PARAMETER LIST FOR KEY 1 STORAGE FOR IEFAB4UV:           00386
         USING KEY1SP,R7         ADDR TO DSECT                          00387
         LA   R1,UNITABLE                                               00388
         ST   R1,UTBLPTR                                                00389
         LA   R1,FLAGS                                                  00390
         ST   R1,FLAGPTR                                                00391
         LA   R1,ATTRAREA                                               00392
         ST   R1,ATTRPTR                                                00393
         MVC  UNAME(8),HOLDNAME  MOVE IN UNIT NAME IF GIVEN             00394
         MVC  UCBPTR,HOLDMASK    MOVE IN DEV TYPE + CLASS IF GIVEN      00395
         MVC  FLAGS,HOLDFLAG     MOVE IN FLAGS WHICH ARE BEING HELD     00396
******* KEY0 NO LONGER NEEDED, ALL INFO ALREADY MOVED TO SP236 STORAGE: 00397
         MODESET EXTKEY=TCB,WORKREG=9   R6 STILL ADDRESSED TO TCB DSECT 00398
         LA   R1,4                                                      00399
         SVC  254                                                       00400
         LA   R1,IEFPARM                                                00401
         LINK EP=IEFAB4UV                                               00402
*                                                                       00403
         LR   R12,R15         SAVE THE RETURN CODE FOR LATER CHECKING   00404
*********************************************************************** 00405
* INPUT STORAGE AREA (KEY 1 SUBPOOL 236) CAN BE FREED IMMEDIATELY AFTER 00406
* RETURNED INFO MOVED OUT.  ANSWERS (FOR FUNCTION UNIT NAME IN, UCBS    00407
* OUT) ARE RETURNED IN KEY 1 SUBPOOL 230 STORAGE.  THAT CAN BE FREED    00408
* AFTER ALL THE UCBS ARE MOVED OUT.  THIS CODE MUST BE IN KEY=1 TO DO   00409
* THAT + THEREFORE MUST BE RE-ENTERANT. NON-RENT WILL NOT WORK FOR      00410
* KEY=1 FREEMAIN BECAUSE FETCH LOADS A NON-RENT PROGRAM INTO A SUBPOOL  00411
* WHICH WILL CAUSE AN ABEND 0C4 AFTER THE MODESET TO KEY=1.             00412
*********************************************************************** 00413
GOTANS   L    R7,UTBLPTR          POINTER TO UNIT TABLE                 00414
         DROP R7                  NO LONGER NEEDED                      00415
         USING UNITABLE,R7        ADDRESS TO UNIT TABLE                 00416
         MVC  UCBLIST,UCBPTR      SAVE PTR TO UCB LIST                  00417
         MVC  IEFOUTNM,UNAME      HOLD UNITNAME/LOOK-UP-VALUE           00418
*RETURNED ATTRIB INFO NOT HELD BECAUSE NOT YET NEEDED IN UCBFIND CODE   00419
         L    R14,SPNO236                                               00420
         L    R1,KEY1ADDR                                               00421
         FREEMAIN R,LV=LKEY1SP,SP=(R14),A=(R1)                          00422
IEFEND   LM   R14,R9,SUBSAVE      RESTORE REGS                          00423
         BCR  15,R14              RETURN TO CALLER                      00424
*********************************************************************** 00425
**********END OF IEFAB4UV SUBROUTINE*********************************** 00426
*********************************************************************** 00427
*                                                                       00428
*********************************************************************** 00429
*****     IEFUCBS SUBROUTINE     *********************************      00430
***SUBROUTINE TO MOVE UCBS RETURNED FROM IEFAB4UV INTO CALLERS STORAGE  00431
*********************************************************************** 00432
IEFUCBS  STM   R14,R9,SUBSAVE     HOLD THESE REGS SO THEY CAN BE REUSED 00433
         LA    R12,0              RESET RETURN CODE REG                 00434
         L     R9,UCBLIST         PTR TO UCB LIST                       00435
         CLI   0(R9),X'E6'        IS THIS THE UCB LIST? E6 = SP230      00436
         BC    7,NOTUCBLS         NOT UCB LIST SEND MSG                 00437
**** 0(R9) IS THE LENGTH OF UCB LIST RETURNED, WE DO NOT NEED IT        00438
         DROP  R7                 FROM KEY1 PARM DSECT                  00439
         MVC   OUTCNT,4(R9)       MOVE # OF UCBS TO CALLERS STORAGE     00440
         L     R7,4(R9)           NUMBER OF UCBS IN LIST                00441
         LA    R9,8(R9)           ADDRESS OF 1ST UCB PTR                00442
         LA    R15,OUTUCBS        FIRST UCB PTR SLOT IN CALLERS STORAGE 00443
         L     R8,=F'700'         ROOM FOR 700 UCBS IN CALLERS STORAGE  00444
MOVEUCBS MVC   0(4,R15),0(R9)     MOVE UCB ADDR TO CALLERS STORAGE      00445
         BCT   R7,NEXTUCB         GET READY TO MOVE NEXT ONE            00446
         BC    15,IEFUCEND        NO MORE UCBS, END OF IEFUCBS SUB      00447
NEXTUCB  BCT   R8,MOREROOM        MORE UCBS + MORE CALLERS STORAGE LEFT 00448
*********************************************************************   00449
*RETURN TO CALLER WITH 700 UCBS + NOTIFY HIM THAT MORE UCBS ARE AVAIL   00450
*THAT THE 700 FULLWORDS SHOULD BE INCREASED. SUBPOOL 230 WILL NOT BE    00451
*FREED BY THE SUBROUTINE, IT WILL AUTOMATICALLY FREED AT TASK           00452
*TERMINATION (WHEN CALLER ENDS).                                        00453
*********************************************************************   00454
RANOUT   MVC   WTOMSG+4(80),MSG02 WORK AREA NOT LARGE ENOUGH            00455
         BAL   R14,WTOIT          WRITE WTO MSG                         00456
         LA    R12,40             R12=28 NOT ALL UCBS BEING RETURNED    00457
         BC    15,IEFUCEND        END OF IEFUCBS SUB                    00458
MOREROOM LA    R9,4(R9)           POINT TO NEXT UCB FROM IEFAB4UV       00459
         LA    R15,4(R15)         POINT TO NEXT SLOT IN USERS STORAGE   00460
         B     MOVEUCBS           CONTINUE MOVING UCBS                  00461
IEFUCEND LM    R14,R9,SUBSAVE     RESTORE REGS                          00462
         BCR   15,R14             RETURN TO CALLER OF IEFUCBS           00463
******************************************************************      00464
*****     END OF IEFUCBS SUBROUTINE     **************************      00465
******************************************************************      00466
*                                                                       00467
******************************************************************      00468
*****     WTO PROCESSING ROUTINES BASED ON RETURN CODES     ******      00469
******************************************************************      00470
NONAME0  MVC   WTOMSG+4(80),MSG00   ESOTERIC NAME NOT FOUND - RETRY'    00471
         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00472
         LA    R12,8              RC = NO UCBS FOUND                    00473
         BC    15,ENDIT           END OF SUBROUTINE                     00474
NONAME   MVC   WTOMSG+4(80),MSG06   ESOTERIC NAME NOT FOUND - RETRY'    00475
         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00476
         LA    R12,8              RC = NO UCBS FOUND                    00477
         BC    15,ENDIT           END OF SUBROUTINE                     00478
NOIEFSTO MVC   WTOMSG+4(80),MSG07 NO STORGE AVAIL FOR IEFAB4UV UCB LIST 00479
         BAL   R14,WTOIT          RC = NO IEFAB4UV STORAGE AVAILABLE    00480
         MVC   WTOMSG+4(80),MSG02 NOT ALL UCBS RETURNED-CONTACT TEC.    00481
         BAL   R14,WTOIT          RC = NO IEFAB4UV STORAGE AVAILABLE    00482
         LA    R12,32             RC=20 SEND BACK TO THE CALLER         00483
         BC    15,ENDIT           END OF SUBROUTINE                     00484
NOTUCBLS MVC   WTOMSG+4(80),MSG08   RETURNED UCB LIST INVALID           00485
         BAL   R14,WTOIT          RC = 24 RETURNED UCB LIST INVALID     00486
         LA    R12,36             R12=24 IEFAB4UV RC=0-UCB LIST INVALID 00487
         BC    15,ENDIT           END OF SUBROUTINE                     00488
NOEDTPTR MVC   WTOMSG+4(80),MSG10  EDT PTR NOT FOUND IN JESCT           00489
         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00490
         LA    R12,8              RC = NO UCBS FOUND                    00491
         BC    15,ENDIT           END OF SUBROUTINE                     00492
NOTSUP   MVC   WTOMSG+4(80),MSG11  EDT PTR NOT FOUND IN JESCT           00493
         BAL   R14,WTOIT          RC = NO UCBS FOUND                    00494
         LA    R12,8              RC = NO UCBS FOUND                    00495
         BC    15,ENDIT           END OF SUBROUTINE                     00496
GIVE1VOL MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00497
         BAL   R14,WTOIT          WRITE MSG                             00498
         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00499
         BC    15,ENDIT           EOJ                                   00500
GIVEVOLS MVC   WTOMSG+4(80),MSG01 FUNCTION NOT SUPPORTED                00501
         BAL   R14,WTOIT          WRITE MSG                             00502
         LA    R12,22             R12=16 FUNCTION NOT SUPPORTED         00503
         BC    15,ENDIT           EOJ                                   00504
ABENDIT  MVC   WTOMSG+4(80),MSG13                                       00505
         BAL   R14,WTOIT                                                00506
         BC    15,EODAD                                                 00507
WTOIT    WTO   MF=(E,WTOMSG)                                            00508
         MVC   WTOMSG+4(84),=84CL1' '                                   00509
         BR    R14                RETURN TO ISSUSER                     00510
**********************************************************************  00511
*****     END OF WTO SECTION     *************************************  00512
**********************************************************************  00513
*                                                                       00514
**********************************************************************  00515
*****     END OF JOB PROCESSING     **********************************  00516
**********************************************************************  00517
EODAD    L     R6,TCBHOLD                                               00518
         USING TCB,R6                                                   00519
         SR    R1,R1              PREPARE FOR AUTHORIZATION             00520
         SVC   254                TO PREPARE FOR KEY=1                  00521
         MODESET MODE=SUP         TO PREPARE FOR KEY=1                  00522
         L     R1,UCBLIST         PTR TO GETMAIN'D AREA                 00523
         L     R0,0(R1)           SUBPOOL 230 + LEN OF STORAGE          00524
         LTR   R1,R1              IS A FREEMAIN REQUIRED                00525
         BC    8,EODADB           NO BRANCH AROUND IT                   00526
         MODESET EXTKEY=SCHED                                           00527
         SVC   10                 FREEMAIN OF SUBPOOL 230               00528
EODADB   MODESET KEY=ZERO                                               00529
         MODESET EXTKEY=TCB,WORKREG=9                                   00530
         MODESET MODE=PROB                                              00531
         LA    R1,4                                                     00532
         SVC   254                                                      00533
         LR    R1,R13             DYNAMIC AREA ADDR                     00534
         LA    R0,LDYNAMIC        SIZE OF AREA                          00535
         L     R13,4(,R13)        PREV SAVE AREA                        00536
         LA    R1,0(,R1)          CLEAR HI ORDER                        00537
         SVC   10                 FREEMAIN                              00538
         LM    R14,R11,12(R13)    RESTORE REGS                          00539
         LR    R15,R12            RETURN CODE                           00540
         L     R12,68(R13)        RESTORE R12                           00541
         MVI   12(R13),X'FF'      INDICATE RETURN                       00542
         BR    R14                GO BACK TO TMP                        00543
         EJECT                                                          00544
ENDIT    LR    R1,R13             DYNAMIC AREA ADDR                     00545
         LA    R0,LDYNAMIC        SIZE OF AREA                          00546
         L     R13,4(,R13)        PREV SAVE AREA                        00547
         LA    R1,0(,R1)          CLEAR HI ORDER FOR FREEMAIN           00548
         SVC   10                 FREEMAIN                              00549
         LM    R14,R11,12(R13)    RESTORE REGS                          00550
         LR    R15,R12            RETURN CODE                           00551
         L     R12,68(R13)        RESTORE REG 12                        00552
         MVI   12(R13),X'FF'      INDICATE RETURN                       00553
         BR    R14                GO BACK TO TMP                        00554
         EJECT                                                          00555
****************************************************************        00556
**** LITERALS BELOW DO NOT REQUIRE GETMAIN STORAGE:                     00557
****************************************************************        00558
******* THE FOLLOWING ARE FOR DBC ESTAE                         DBC     00559
*DBCMFL   ESTAE ,MF=L                                           DBC     00560
*DBCMFLN  EQU   *-DBCMFL                                        DBC     00561
******* WTO MESSAGES + WTO FORMAT FOR 80 CHAR MSGS:                     00562
WTOPATRN WTO   '                                                       X00563
                                            ',ROUTCDE=(11),MF=L         00564
MSG00 DC CL80'CBT1500 - GENERIC/ESOTERIC NAME NOT FOUND'                00565
MSG01 DC CL80'CBT1500 - SPECIFIED PARM FUNCTION NOT SUPPORTED'          00566
MSG02 DC CL80'CBT1500 - NOT ALL UCBS RETURNED - CONTACT TEC SUPPORT'    00567
MSG03 DC CL80'CBT1500 - GENERIC NAME NOT FOUND'                         00568
MSG04 DC CL80'CBT1500 - ESOTERIC NAMES NOT SUPPORTED BY THIS UTILITY'   00569
MSG05 DC CL80'CBT1500 - NO UCBS FOUND MATCHING THE DEVICE NAME'         00570
MSG06 DC CL80'CBT1500 - NO UCBS FOUND MATCHING THIS ESOTERIC NAME'      00571
MSG07 DC CL80'CBT1500 - NO STORAGE AVAILABLE FOR IEFAB4UV''S UCB LIST'  00572
MSG08 DC CL80'CBT1500 - RETURNED UCB LIST INVALID'                      00573
MSG09 DC CL80'CBT1500 - DEVICE TYPE NOT DEFINED TO SYSTEM'              00574
MSG10 DC CL80'CBT1500 - IEFAB4UV: ENVIRONMENT PROB NO EDT PTR IN JESCT' 00575
MSG11 DC CL80'CBT1500 - FUNCTION NOT SUPPORTED BY IEFEB4UV'             00576
MSG12 DC CL80'CBT1500 - FUNC=01+ ESOTERIC UCBTYP SUPPORTED ONLY IN X-A' 00577
MSG13 DC CL80'CBT1500 - ABEND UCBFIND SUBROUTINE - CONTACT TEC SUPPORT' 00578
******* THE FOLOWING ARE FOR EDT SEARCHING:                             00579
EDTLUVSP EQU   X'000'                                                   00580
LUVENTNO EQU   X'000'                                                   00581
LUVENTLN EQU   X'004'                                                   00582
LUVENTRY EQU   X'008'                                                   00583
LUVUNAME EQU   X'000'                                                   00584
LUVVALUE EQU   X'008'                                                   00585
******* THE FOLLOWING ARE FOR IEFAB4UV:                                 00586
ALLBLANK DS    200CL9' '                                                00587
         DS    0F                                                       00588
SPNO236  DC    X'000000EC'        SUBPOOL 236                           00589
SPNO230  DC    X'000000E6'        SUBPOOL 230                           00590
FLGNAME  DC    XL2'1000'          BIT 3 UCB SEARCH FOR UNIT NAME        00591
FLGDEV   DC    XL2'2100'          BITS 2+7 CONVERT UCBTYP TO UNITNAME   00592
         DS    0F                                                       00593
SUBZAP   DC    X'FF000000'                                              00594
**********************************************************************  00595
**FOLLOWING WAS TAKEN FROM MODULE: IEFW21SD  CSECT: IEFAB4UV WHICH      00596
**INTERFACES TO EDT (ELIGIBLE DEVICE TABLE). GENERATING MACRO NAME IS   00597
**IEFZB421, BUT COULDN'T BE FOUND, SO HARDCODED OFFSETS ARE BEING USED  00598
**********************************************************************  00599
**LUVSECT  EQU   0                                                  **  00600
**LUVHDR   EQU   LUVSECT                                            **  00601
**LUVENTNO EQU   LUVHDR                                             **  00602
**LUVENTRY EQU   0                                                  **  00603
**UNITNAME EQU   LUVENTRY                                           **  00604
**LUVALUE  EQU   LUVENTRY+8                                         **  00605
**LUVGMTP  EQU   LUVENTRY+12                                        **  00606
**LUVGENNO EQU   LUVENTRY+16                                        **  00607
**LUVGENP  EQU   LUVENTRY+20                                        **  00608
**LUVFLAGS EQU   LUVENTRY+24                                        **  00609
**********************************************************************  00610
******* GETMAIN AREA STARTS HERE:                                       00611
DYNMAREA DSECT                                                          00612
MYSAVE   DS    18F                                                      00613
SUBSAVE  DS    12F                SAVE AREA FOR SUBROUTINES             00614
ADDRCPPL DS    F                  CPPL ADDR FOR DSECT                   00615
ADDRCBUF DS    F                  ADDR OF CMD BUFFER                    00616
ADDRUPT  DS    F                  ADDR OF UPT                           00617
ADDRPSCB DS    F                  ADDR OF PSCB                          00618
ADDRECT  DS    F                  ADDR OF ECT                           00619
SYSTEMSW DS    X                  SW FOR XA/MVS SYSTEM TYPE             00620
******* THE FOLLOWING IS FOR DBC:                                       00621
*ESTAREA  ESTAE ,MF=L                                                   00622
******* THE FOLLOWING IS FOR IEFAB4UV:                                  00623
CPPLADDR DS    F                                                        00624
         DS    0F                                                       00625
TCBHOLD  DS    F                                                        00626
IEFOUTNM DS    CL8        TMP HOLD FOR UNITNAME/LOOK-UP-VALUE FROM IEF  00627
HOLDFLAG DS    XL2        TMP HOLD LOCATION FOR IEFAB4UV FLAGS          00628
KEY1ADDR DS    F                                                        00629
LISTLEN  DS    F                                                        00630
UCBLIST  DS    F          PTR TO UCB LIST                               00631
         DS    0D                                                       00632
******* THE FOLLOWING ARE FOR WTO:                                      00633
WTOMSG   WTO   '1234567890123456789212345678931234567894123456789512345X00634
               67896123456789712345678981234',ROUTCDE=(11),MF=L         00635
******* FOR SCAN SERVICE ROUTINE:                                       00636
SSPRMLST DS    3F                 SSPRMLST MAPPING FOR UCB              00637
         ORG   SSPRMLST                                                 00638
SSPRMWA  DS    F                  ADDR OF 100-BYTE WORK AREA            00639
SSPRMDEV DS    F                  ADDR OF DEV TYPE TO SCAN FOR          00640
SSPRMUCB DS    F                  ADDR OF RETURNED UCB                  00641
         SPACE                                                          00642
SSDEVC   DS    CL1                DEVICE CLASS TO SEARCH FOR            00643
SSUCB    DS    F                  RETURNED UCB ADDR                     00644
SSADDR   DS    F                  ADDR OF SCANSERVICE ROUTINE           00645
*                                                                       00646
******* FOR EDT SEARCHING:                                              00647
HOLDNAME DS    CL8  CURRENT WORKING NAMES(ESOTERIC,GENERIC,LOOK-UP-VAL) 00648
*HOLDDEVT DS    CL4                INPUT DEV CLASS + TYPE               00649
HOLDMASK DS    0CL4               MASK (DEVICE CLASS + DEV TYPE)        00650
TYP1     DS    CL1                UCBTBYT1                              00651
TYP2     DS    CL1                UCBTBYT2                              00652
HOLDDEV  DS    0CL2               DEVICE CLASS + TYPE                   00653
HOLDCLAS DS    CL1                DEVICE CLASS                          00654
HOLDDEVT DS    CL1                DEVICE TYPE                           00655
CNTUCB   DS    F                  COUNT OF # OF UCBS FOUND              00656
         DS    0D                                                       00657
LDYNAMIC EQU   *-DYNMAREA                                               00658
******* THE FOLLOWING MAPS THE PARM SENT AS INPUT TO THE SUBROUTINE:    00659
PARMAREA DSECT                                                          00660
PARMFUNC DS    XL1                                                      00661
         DS    XL3                                                      00662
PARMNAME DS    0CL8                                                     00663
PARMDEV  DS    0XL4                                                     00664
PARMTYP1 DS    X                                                        00665
PARMTYP2 DS    X                                                        00666
PARMDEVC DS    X                                                        00667
PARMDEVT DS    X                                                        00668
         DS    CL4                                                      00669
PARM2K   DS    F           PTR TO 2K STORAGE AREA                       00670
******* MAP THE 2K AREA (USED FOR SUBROUTINE OUTPUT):                   00671
OUT2K    DSECT                                                          00672
OUTWORK  DS    XL100                                                    00673
OUTCNT   DS    F                                                        00674
OUTUCBS  DS    700F                                                     00675
*********************************************************************** 00676
******* DSECT FOR KEY1 SUBPOOL GETMAIN'D STORAGE                        00677
*********************************************************************** 00678
KEY1SP   DSECT                     GETMAIN DSECT FOR KEY1 SUBPOOL       00679
* IEFAB4UV PARAMETER LIST:                                              00680
IEFPARM  DS    0FL2                IEFAB4UV PARAMETER LIST MAPING       00681
UTBLPTR  DS    F                   ADDRESS OF UNIT TABLE                00682
FLAGPTR  DS    F                   ADDR OF DEVTYPE BYTE TO BE SEARCHED  00683
*                                                                       00684
* UNITABLE IS NOT DEFINED AS ANOTHER 'DSECT' SO LKEY1SP WILL SHOW TOTAL 00685
* LENGTH OF REQUIRED KEY 1 STORAGE.  A   'USING UNITABLE,R7'  IS USED   00686
* WITHIN THE CODE WITH OFFSETS CALCULATED AT 8X DISPLACED TO COMPENSATE 00687
* FOR ABOVE IEFPARM STORAGE.                                            00688
*                                                                       00689
* IEFAB4UV UNIT TABLE:                                                  00690
UNITABLE DS    0CL20                                                    00691
UNAME    DS    8C                                                       00692
UCBPTR   DS    F                                                        00693
ATTRPTR  DS    F                                                        00694
         DS    F                                                        00695
*                                                                       00696
* IEFAB4UV FLAGS:                                                       00697
FLAGS    DS    XL2                                                      00698
* IEFAB4UV ATTRIBUTE AREA:                                              00699
ATTRAREA DS    CL10                                                     00700
LKEY1SP  EQU   *-KEY1SP                                                 00701
**********************************************************************  00702
         EJECT                                                          00703
         IEFUCBOB                  UCB MAPPING MACRO                    00704
         EJECT                                                          00705
         IEFJESCT                                                       00706
         EJECT                                                          00707
         IKJTCB                                                         00708
         EJECT                                                          00709
         CVT   DSECT=YES                                                00710
         EJECT                                                          00711
         IKJECT                                                         00712
         EJECT                                                          00713
         IKJUPT                                                         00714
         EJECT                                                          00715
         IKJCPPL                                                        00716
         EJECT                                                          00717
         IKJPPL                                                         00718
         EJECT                                                          00719
         IKJIOPL                                                        00720
#PAN$AUD CSECT                                                          007204
$PAN#AUD DC    CL21'001CBT1500   01/09/86'                              007205
         END   UCBFIND                                                  00721
